@model kuruinsaat.Models.Proje

@{
    ViewBag.Title = "ProjeEkle";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
    
}

<div class="content-body">
    <!-- row -->
    <div class="container-fluid">
        <div class="row page-titles mx-0">
            <div class="col-sm-6 p-md-0">
                <div class="welcome-text">
                    <h4>Ürün Düzenleme</h4>
                    <span>Ürün Düzenle</span>
                </div>
            </div>
            <div class="col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="javascript:void(0)">Ürün</a></li>
                    <li class="breadcrumb-item active"><a href="javascript:void(0)">Düzenle</a></li>
                </ol>
            </div>
        </div>


        <!-- content -->
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-xl-3 ">
                                <!-- Tab panes -->
                                <div class="tab-content" id="tab-content">

                                    @{
                                        if (ViewBag.resimler==null)
                                        {
                                            <div role="tabpanel" class="tab-pane fade active show" id="first">
                                                <img class="img-fluid" src="~/Assets/Images/helper/blankimage_1.jpg" alt="">
                                            </div>
                                        }
                                        else
                                        {

                                            foreach (var item in ViewBag.resimler)
                                            {
                                                <div role="tabpanel" class="tab-pane fade @(item.ResimYolu == ViewBag.resimler[0].ResimYolu ? " active show" : "")" id="x@(item.Id)">
                                                    <img class="img-fluid" src="~/Assets/images/Uploads/@(item.ResimYolu)" alt="">
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                                <div class="tab-slide-content new-arrival-product mb-4 mb-xl-0">
                                    <!-- Nav tabs -->
                                    <ul class="nav slide-item-list mt-3" role="tablist" id="tab-content-slide">
                                        @{
                                            if (ViewBag.resimler==null)
                                            {
                                                <li role="presentation" class="show">
                                                    <a href="#first" role="tab" data-toggle="tab" class="active" aria-selected="true">
                                                        <img class="img-fluid" src="~/Assets/Images/helper/blankimage_1.jpg" alt="" width="50">
                                                    </a>
                                                </li>
                                            }
                                            else
                                            {
                                                foreach (var item in ViewBag.resimler)
                                                {
                                                    <li role="presentation" @(item.ResimYolu == ViewBag.resimler[0].ResimYolu ? " class= \"show\"" : "")>
                                                        <a href="#x@(item.Id)" role="tab" data-toggle="tab" @(item.ResimYolu == ViewBag.resimler[0].ResimYolu ? " class=\"show\" aria-selected=\"true\"" : "")>
                                                            <img class="img-fluid" src="~/Assets/images/Uploads/thump_@(item.ResimYolu)" alt="" width="50">
                                                        </a>
                                                    </li>
                                                }
                                            }
                                        }

                                        <li role="presentation" id="insertImage">
                                            <a onclick="javascript:document.querySelector('#file').click()" role="tab" data-toggle="tab" class="" aria-selected="false"><img class="img-fluid" src="~/Assets/Images/helper/addimage_1.png" alt="" width="50"></a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <input type="file" name="file[]" id="file" accept="image/*" multiple hidden />
                            <!--Tab slider End-->


                            <div class="col-xl-9 col-sm-12">
                                <div class="product-detail-content">
                                    <!--Projeler details-->

                                    @using (Html.BeginForm(Model != null && Model.Id!=null ? "ProjeDuzenle/"+Model.Id : "ProjeEkle", "Yonetim", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {
                                    <div class="new-arrival-content pr">
                                        <hr />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <!-- Proje Adı -->
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Adi, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-sm-5">
                                                @Html.EditorFor(model => model.Adi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Adi, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <!-- Blok Adedi -->
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.BlokAdedi, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-sm-5">
                                                @Html.EditorFor(model => model.BlokAdedi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.BlokAdedi, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <!-- Toplam Konut Sayısı -->
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ToplamKonutSayisi, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-sm-5">
                                                @Html.EditorFor(model => model.ToplamKonutSayisi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ToplamKonutSayisi, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <!-- Tax -->
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ArsaAlani, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-sm-2">
                                                @Html.EditorFor(model => model.ArsaAlani, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ArsaAlani, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <!-- Kullanılabilir Alan -->
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.KullanilabilirAlan, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-sm-2">
                                                @Html.EditorFor(model => model.KullanilabilirAlan, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.KullanilabilirAlan, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <!-- Teslim Tarihi -->
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.TeslimTarihi, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-sm-5">
                                                @Html.EditorFor(model => model.TeslimTarihi, new { htmlAttributes = new { @class = "datepicker-default form-control", @id="datepicker" }})
                                                @Html.ValidationMessageFor(model => model.TeslimTarihi, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.Adres, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-sm-2">
                                                @Html.EditorFor(model => model.Adres, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Adres, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="shopping-cart mt-3 text-right">
                                            <button type="submit" class="btn btn-success btn-lg" href="#"><i class="fa fa-check mr-2"></i>Kaydet</button>
                                        </div>
                                    </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                @Html.ActionLink("Listeye Dönb", "Index")
            </div>
        </div>
    </div>
</div>


<script>
    var file = document.querySelector("#file");
    file.addEventListener("change", function (event) {

        var totalfiles = file.files.length;
        if (totalfiles > 0) {

            var formData = new FormData();

            // Read selected files
            for (var index = 0; index < totalfiles; index++) {
                formData.append("file[]", file.files[index]);
            }

            let ab = document.querySelector("#tab-content-slide").lastElementChild.innerHTML;
            let a = SendXMLHttpRequest(formData, "ResimYukle", function handle(returnStr, status) {
                console.log("Dönen Json = " + returnStr);

                const jobj = JSON.parse(returnStr);
                const tabcontents = document.querySelector("#tab-content");
                const tabcontentslideLast = document.querySelector("#tab-content-slide").lastElementChild;
                let contentstr = "";
                let slidestr = "";
                jobj[0]["path"]

                for (let index = 0; index < jobj.length; index++) {

                    contentstr += '<div role="tabpanel" class="tab-pane fade" id="x' + jobj[index]["ResimYolu"].split('.')[0] + '"><img class="img-fluid" src="/Assets/Images/Uploads/' + jobj[index]["ResimYolu"] + '" alt=""></div>';
                    slidestr += '<li role="presentation"><a href="#x' + jobj[index]["ThumpResimYolu"].split('.')[0] + '" role="tab" data-toggle="tab"><img class="img-fluid" src="/Assets/Images/Uploads/' + jobj[index]["ThumpResimYolu"] + '" alt="" width="50"></a></li>';
                }
                tabcontents.lastElementChild.insertAdjacentHTML('afterend', contentstr);
                tabcontentslideLast.insertAdjacentHTML('beforebegin', slidestr);
            });

        }
    });
</script>